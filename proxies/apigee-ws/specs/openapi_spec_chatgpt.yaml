## accept purchase orders for specialized cofee beans through web api  
openapi: 3.0.0
info:
  title: Coffee Beans Purchase Order API
  description: >-
    This API allows you to create and manage purchase orders for specialized
    coffee beans.
  version: 1.0.0
servers:
  - url: https://purchase-order-api.34-110-134-67.nip.io/apihub-llm-purchase-order-api
components:
  schemas:
    PurchaseOrder:
      type: object
      properties:
        id:
          type: string
          description: The ID of the purchase order.
        createdAt:
          type: string
          format: date-time
          description: The date and time the purchase order was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time the purchase order was last updated.
        status:
          type: string
          description: The status of the purchase order.
          example: pending
        customerId:
          type: string
          required: true
          description: The ID of the customer who placed the purchase order.
        coffeeBeanId:
          type: string
          required: true
          description: The ID of the type of coffee bean that is being purchased.
        quantity:
          type: integer
          required: false
          default: 1
          description: The quantity of coffee beans that are being purchased.
        unitPrice:
          type: number
          required: true
          description: The unit price of the coffee beans.
        totalPrice:
          type: number
          description: The total price of the purchase order.
    CoffeeBean:
      type: object
      properties:
        id:
          type: string
          description: The ID of the coffee bean.
        name:
          type: string
          description: The name of the coffee bean.
        origin:
          type: string
          description: The origin of the coffee bean.
        roast:
          type: string
          description: The roast of the coffee bean.
        flavor:
          type: string
          description: The flavor of the coffee bean.
        price:
          type: number
          description: The price of the coffee bean.
paths:
  /purchase-orders:
    get:
      tags:
        - PurchaseOrder
      summary: List all purchase orders.
      description: Returns a list of all purchase orders.
      operationId: listPurchaseOrders
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            description: The page number to return.
        - name: size
          in: query
          schema:
            type: integer
            description: The number of items to return per page.
      responses:
        '200':
          description: A list of purchase orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
    post:
      tags:
        - PurchaseOrder
      summary: Create a new purchase order.
      description: Creates a new purchase order.
      operationId: createPurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '201':
          description: The purchase order was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.
  '/purchase-orders/{id}':
    get:
      tags:
        - PurchaseOrder
      summary: Get a purchase order by ID.
      description: Returns a purchase order by its ID.
      operationId: getPurchaseOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the purchase order to get.
      responses:
        '200':
          description: The purchase order was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
    put:
      tags:
        - PurchaseOrder
      summary: Update a purchase order.
      description: Updates a purchase order.
      operationId: updatePurchaseOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the purchase order to update.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '200':
          description: The purchase order was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
    delete:
      tags:
        - PurchaseOrder
      summary: Delete a purchase order.
      description: Deletes a purchase order.
      operationId: deletePurchaseOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the purchase order to delete.
      responses:
        '204':
          description: The purchase order was deleted successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
  /coffee-beans:
    get:
      tags:
        - CoffeeBean
      summary: List all coffee beans.
      description: Returns a list of all coffee beans.
      operationId: listCoffeeBeans
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            description: The page number to return.
        - name: size
          in: query
          schema:
            type: integer
            description: The number of items to return per page.
      responses:
        '200':
          description: A list of coffee beans.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoffeeBean'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
    post:
      tags:
        - CoffeeBean
      summary: Create a new coffee bean.
      description: Creates a new coffee bean.
      operationId: createCoffeeBean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeBean'
      responses:
        '201':
          description: The coffee bean was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeBean'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.
  '/coffee-beans/{id}':
    get:
      tags:
        - CoffeeBean
      summary: Get a coffee bean by ID.
      description: Returns a coffee bean by its ID.
      operationId: getCoffeeBean
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the coffee bean to get.
      responses:
        '200':
          description: The coffee bean was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeBean'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
    put:
      tags:
        - CoffeeBean
      summary: Update a coffee bean.
      description: Updates a coffee bean.
      operationId: updateCoffeeBean
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the coffee bean to update.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeBean'
      responses:
        '200':
          description: The coffee bean was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeBean'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.
    delete:
      tags:
        - CoffeeBean
      summary: Delete a coffee bean.
      description: Deletes a coffee bean.
      operationId: deleteCoffeeBean
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the coffee bean to delete.
      responses:
        '204':
          description: The coffee bean was deleted successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '500':
          description: Internal server error.